[{"/Users/mushtaq/Desktop/projects/quiz/quiz-app/src/index.js":"1","/Users/mushtaq/Desktop/projects/quiz/quiz-app/src/reportWebVitals.js":"2","/Users/mushtaq/Desktop/projects/quiz/quiz-app/src/App.js":"3","/Users/mushtaq/Desktop/projects/quiz/quiz-app/src/components/Quiz.js":"4"},{"size":500,"mtime":1649392687530,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1649392687530,"results":"7","hashOfConfig":"6"},{"size":11140,"mtime":1649831608534,"results":"8","hashOfConfig":"6"},{"size":0,"mtime":1649488623507,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"163xhpk",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mushtaq/Desktop/projects/quiz/quiz-app/src/index.js",[],[],["24","25"],"/Users/mushtaq/Desktop/projects/quiz/quiz-app/src/reportWebVitals.js",[],[],"/Users/mushtaq/Desktop/projects/quiz/quiz-app/src/App.js",["26","27","28","29","30"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { CSVLink } from \"react-csv\";\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card, Button, Container } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  let allQuestions = [\n    {\n      num: 1,\n      question: \"Caring for people who have suffered is an important virtue.\",\n    },\n    {\n      num: 2,\n      question:\n        \"I believe that compassion for those who are suffering is one of the most crucial virtues.\",\n    },\n    {\n      num: 3,\n      question: \"We should all care for people who are in emotional pain.\",\n    },\n    {\n      num: 4,\n      question:\n        \"I am empathetic toward those people who have suffered in their lives.\",\n    },\n    {\n      num: 5,\n      question:\n        \"Everyone should try to comfort people who are going through something hard.\",\n    },\n    {\n      num: 6,\n      question:\n        \"It pains me when I see someone ignoring the needs of another human being.\",\n    },\n    {\n      num: 7,\n      question:\n        \"The world would be a better place if everyone made the same amount of money.\",\n    },\n    {\n      num: 8,\n      question:\n        \"Our society would have fewer problems if people had the same income.\",\n    },\n    {\n      num: 9,\n      question:\n        \"I believe that everyone should be given the same quantity of resources in life.\",\n    },\n    {\n      num: 10,\n      question:\n        \"I believe it would be ideal if everyone in society wound up with roughly the same amount of money.\",\n    },\n    {\n      num: 11,\n      question:\n        \"When people work together toward a common goal, they should share the rewards equally, even if some worked harder on it.\",\n    },\n    {\n      num: 12,\n      question:\n        \"I get upset when some people have a lot more money than others in my country.\",\n    },\n    {\n      num: 13,\n      question:\n        \"I think people who are more hard-working should end up with more money.\",\n    },\n    {\n      num: 14,\n      question:\n        \"I think people should be rewarded in proportion to what they contribute.\",\n    },\n    {\n      num: 15,\n      question:\n        \"The effort a worker puts into a job ought to be reflected in the size of a raise they receive.\",\n    },\n    {\n      num: 16,\n      question: \"It makes me happy when people are recognized on their merits.\",\n    },\n    {\n      num: 17,\n      question:\n        \"In a fair society, those who work hard should live with higher standards of living.\",\n    },\n    {\n      num: 18,\n      question: \"I feel good when I see cheaters get caught and punished.\",\n    },\n    {\n      num: 19,\n      question:\n        \"I think children should be taught to be loyal to their country.\",\n    },\n    {\n      num: 20,\n      question: \"It upsets me when people have no loyalty to their country.\",\n    },\n    { num: 21, question: \"Everyone should love their own community.\" },\n    {\n      num: 22,\n      question: \"Everyone should defend their country, if called upon. \",\n    },\n    {\n      num: 23,\n      question:\n        \"Everyone should feel proud when a person in their community wins in an international competition.\",\n    },\n    {\n      num: 24,\n      question:\n        \"I believe the strength of a sports team comes from the loyalty of its members to each other.\",\n    },\n    {\n      num: 25,\n      question:\n        \"I think it is important for societies to cherish their traditional values.\",\n    },\n    {\n      num: 26,\n      question:\n        \"I feel that most traditions serve a valuable function in keeping society orderly\",\n    },\n    {\n      num: 27,\n      question: \"I think obedience to parents is an important virtue. \",\n    },\n    { num: 28, question: \"We all need to learn from our elders. \" },\n    {\n      num: 29,\n      question:\n        \"I believe that one of the most important values to teach children is to have respect for authority.\",\n    },\n    {\n      num: 30,\n      question: \"I think having a strong leader is good for society.\",\n    },\n    {\n      num: 31,\n      question:\n        \"I think the human body should be treated like a temple, housing something sacred within.\",\n    },\n    { num: 32, question: \"I believe chastity is an important virtue.\" },\n    {\n      num: 33,\n      question:\n        \"It upsets me when people use foul language like it is nothing.\",\n    },\n    {\n      num: 34,\n      question:\n        \"If I found out that an acquaintance had an unusual but harmless sexual fetish I would feel uneasy about them\",\n    },\n    {\n      num: 35,\n      question:\n        \"People should try to use natural medicines rather than chemically identical human-made ones.\",\n    },\n    {\n      num: 36,\n      question: \"I admire people who keep their virginity until marriage.\",\n    },\n  ];\n\n  const [count, setCount] = useState({});\n  const [questions, setQuestion] = useState([]);\n  const [show, setShow] = useState(false);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [minOption, setMinOption] = useState(\"\");\n  const [maxOption, setMaxOption] = useState(\"\");\n\n  const headers = [\n    { label: \"Question Number\", key: \"num\" },\n    { label: \"Question\", key: \"question\" },\n    { label: \"Active\", key: \"active\" },\n    { label: \"Choice\", key: \"choice\" },\n  ];\n\n  const csvReport = {\n    filename: \"Responses.csv\",\n    headers: headers,\n    data: questions,\n  };\n\n  const handleClose = () => setShow(false);\n\n  const selectRandomQuestions = () => {\n    const shuffledQuestions = allQuestions.sort(() => 0.5 - Math.random());\n\n    let selected = shuffledQuestions.slice(0, 10);\n    for (let i = 0; i < 10; i++) {\n      setQuestion((questions) => [\n        ...questions,\n        {\n          num: selected[i].num,\n          question: selected[i].question,\n          choice: \"None\",\n        },\n      ]);\n    }\n  };\n\n  const setOption = (id, option) => {\n    questions.map((c) => {\n      if (c.num === id) {\n        c.active = option;\n      }\n    });\n    setQuestion((questions) => [...questions]);\n\n    console.log(questions);\n  };\n  const postChoices = async () => {\n    setEndTime(Date.now());\n    const temp = {};\n    for (let i = 0; i < questions.length; i++) {\n      temp[questions[i].active] = temp[questions[i].active]\n        ? temp[questions[i].active] + 1\n        : 1;\n    }\n    let entries = Object.entries(temp);\n    let minOptionCount = 11;\n    let maxOptionCount = -1;\n\n    for (let [index, [key, value]] of entries.entries()) {\n      if (value < minOptionCount) {\n        console.log(\"Going in min\", key, value);\n        minOptionCount = value;\n        setMinOption((minOption) => [key, value]);\n      }\n\n      if (value > maxOptionCount) {\n        console.log(\"Going in max\", key, value);\n        maxOptionCount = value;\n        setMaxOption((maxOption) => [key, value]);\n      }\n    }\n\n    console.log(\"Values\");\n    console.log(maxOption, minOption);\n\n    setCount(temp);\n    setShow(true);\n\n    try {\n      await axios.post(\"http://localhost:5001/api/choices\", {\n        questions,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    setStartTime(Date.now());\n    selectRandomQuestions();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"text-white\"> The MOLA Quiz</h1>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Thank you for taking the Quiz</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <Col className=\"m-2\" xs={12} md={8}>\n                Time taken: {Math.floor((endTime - startTime) / 1000)} sec{\" \"}\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"m-2\" xs={5} md={4}>\n                Most Chosen: {maxOption[0]}\n              </Col>\n              <Col className=\"m-2\" xs={5} md={4}>\n                Least Chosen: {minOption[0]}\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"m-2\" xs={5} md={4}>\n                Count: {maxOption[1]}\n              </Col>\n              <Col className=\"m-2\" xs={5} md={4}>\n                Count: {minOption[1]}\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <CSVLink {...csvReport}> Download your Responses </CSVLink>\n\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {questions.map((q) => {\n        return (\n          <div>\n            <Card id={q.num} className=\"m-4\">\n              <Card.Header>{q.question} </Card.Header>\n              <Card.Body>\n                <Button\n                  variant=\"primary\"\n                  className={\n                    q.active === \"Strongly Disagree\" ? \"selected m-3\" : \"m-3\"\n                  }\n                  onClick={() => setOption(q.num, \"Strongly Disagree\")}\n                >\n                  Strongly Disagree\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => setOption(q.num, \"Disagree\")}\n                  className={q.active === \"Disagree\" ? \"selected m-3\" : \"m-3\"}\n                >\n                  Disagree\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  className={\n                    q.active === \"Slightly Disagree\" ? \"selected m-3\" : \"m-3\"\n                  }\n                  onClick={() => setOption(q.num, \"Slightly Disagree\")}\n                >\n                  Slightly Disagree\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  className={q.active === \"Neutral\" ? \"selected m-3\" : \"m-3\"}\n                  onClick={() => setOption(q.num, \"Neutral\")}\n                >\n                  Neutral\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  className={\n                    q.active === \"Slightly Agree\" ? \"selected m-3\" : \"m-3\"\n                  }\n                  onClick={() => setOption(q.num, \"Slightly Agree\")}\n                >\n                  Slightly Agree\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  className={q.active === \"Agree\" ? \"selected m-3\" : \"m-3\"}\n                  onClick={() => setOption(q.num, \"Agree\")}\n                >\n                  Agree\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  className={\n                    q.active === \"Strongly Agree\" ? \"selected m-3\" : \"m-3\"\n                  }\n                  onClick={() => setOption(q.num, \"Strongly Agree\")}\n                >\n                  Strongly Agree\n                </Button>\n              </Card.Body>\n            </Card>\n          </div>\n        );\n      })}\n      <Button variant=\"primary\" className=\"m-3\" onClick={postChoices}>\n        Finish\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mushtaq/Desktop/projects/quiz/quiz-app/src/components/Quiz.js",[],[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":173,"column":10,"nodeType":"37","messageId":"38","endLine":173,"endColumn":15},{"ruleId":"40","severity":1,"message":"41","line":213,"column":23,"nodeType":"42","messageId":"43","endLine":213,"endColumn":25},{"ruleId":"35","severity":1,"message":"44","line":234,"column":15,"nodeType":"37","messageId":"38","endLine":234,"endColumn":20},{"ruleId":"45","severity":1,"message":"46","line":265,"column":6,"nodeType":"47","endLine":265,"endColumn":8,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'count' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'index' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectRandomQuestions'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [selectRandomQuestions]",{"range":"54","text":"55"},[7272,7274],"[selectRandomQuestions]"]