{"ast":null,"code":"var _jsxFileName = \"/Users/mushtaq/Desktop/projects/quiz/quiz-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { CSVLink } from \"react-csv\";\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card, Button, Container } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let allQuestions = [{\n    num: 1,\n    question: \"Caring for people who have suffered is an important virtue.\"\n  }, {\n    num: 2,\n    question: \"I believe that compassion for those who are suffering is one of the most crucial virtues.\"\n  }, {\n    num: 3,\n    question: \"We should all care for people who are in emotional pain.\"\n  }, {\n    num: 4,\n    question: \"I am empathetic toward those people who have suffered in their lives.\"\n  }, {\n    num: 5,\n    question: \"Everyone should try to comfort people who are going through something hard.\"\n  }, {\n    num: 6,\n    question: \"It pains me when I see someone ignoring the needs of another human being.\"\n  }, {\n    num: 7,\n    question: \"The world would be a better place if everyone made the same amount of money.\"\n  }, {\n    num: 8,\n    question: \"Our society would have fewer problems if people had the same income.\"\n  }, {\n    num: 9,\n    question: \"I believe that everyone should be given the same quantity of resources in life.\"\n  }, {\n    num: 10,\n    question: \"I believe it would be ideal if everyone in society wound up with roughly the same amount of money.\"\n  }, {\n    num: 11,\n    question: \"When people work together toward a common goal, they should share the rewards equally, even if some worked harder on it.\"\n  }, {\n    num: 12,\n    question: \"I get upset when some people have a lot more money than others in my country.\"\n  }, {\n    num: 13,\n    question: \"I think people who are more hard-working should end up with more money.\"\n  }, {\n    num: 14,\n    question: \"I think people should be rewarded in proportion to what they contribute.\"\n  }, {\n    num: 15,\n    question: \"The effort a worker puts into a job ought to be reflected in the size of a raise they receive.\"\n  }, {\n    num: 16,\n    question: \"It makes me happy when people are recognized on their merits.\"\n  }, {\n    num: 17,\n    question: \"In a fair society, those who work hard should live with higher standards of living.\"\n  }, {\n    num: 18,\n    question: \"I feel good when I see cheaters get caught and punished.\"\n  }, {\n    num: 19,\n    question: \"I think children should be taught to be loyal to their country.\"\n  }, {\n    num: 20,\n    question: \"It upsets me when people have no loyalty to their country.\"\n  }, {\n    num: 21,\n    question: \"Everyone should love their own community.\"\n  }, {\n    num: 22,\n    question: \"Everyone should defend their country, if called upon. \"\n  }, {\n    num: 23,\n    question: \"Everyone should feel proud when a person in their community wins in an international competition.\"\n  }, {\n    num: 24,\n    question: \"I believe the strength of a sports team comes from the loyalty of its members to each other.\"\n  }, {\n    num: 25,\n    question: \"I think it is important for societies to cherish their traditional values.\"\n  }, {\n    num: 26,\n    question: \"I feel that most traditions serve a valuable function in keeping society orderly\"\n  }, {\n    num: 27,\n    question: \"I think obedience to parents is an important virtue. \"\n  }, {\n    num: 28,\n    question: \"We all need to learn from our elders. \"\n  }, {\n    num: 29,\n    question: \"I believe that one of the most important values to teach children is to have respect for authority.\"\n  }, {\n    num: 30,\n    question: \"I think having a strong leader is good for society.\"\n  }, {\n    num: 31,\n    question: \"I think the human body should be treated like a temple, housing something sacred within.\"\n  }, {\n    num: 32,\n    question: \"I believe chastity is an important virtue.\"\n  }, {\n    num: 33,\n    question: \"It upsets me when people use foul language like it is nothing.\"\n  }, {\n    num: 34,\n    question: \"If I found out that an acquaintance had an unusual but harmless sexual fetish I would feel uneasy about them\"\n  }, {\n    num: 35,\n    question: \"People should try to use natural medicines rather than chemically identical human-made ones.\"\n  }, {\n    num: 36,\n    question: \"I admire people who keep their virginity until marriage.\"\n  }];\n  const [count, setCount] = useState({});\n  const [questions, setQuestion] = useState([]);\n  const [show, setShow] = useState(false);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [minOption, setMinOption] = useState(\"\");\n  const [maxOption, setMaxOption] = useState(\"\");\n  const headers = [{\n    label: \"Question Number\",\n    key: \"num\"\n  }, {\n    label: \"Question\",\n    key: \"question\"\n  }, {\n    label: \"Active\",\n    key: \"active\"\n  }, {\n    label: \"Choice\",\n    key: \"choice\"\n  }];\n  const csvReport = {\n    filename: \"Responses.csv\",\n    headers: headers,\n    data: questions\n  };\n\n  const handleClose = () => setShow(false);\n\n  const selectRandomQuestions = () => {\n    const shuffledQuestions = allQuestions.sort(() => 0.5 - Math.random());\n    let selected = shuffledQuestions.slice(0, 10);\n\n    for (let i = 0; i < 10; i++) {\n      setQuestion(questions => [...questions, {\n        num: selected[i].num,\n        question: selected[i].question,\n        choice: \"None\"\n      }]);\n    }\n  };\n\n  const setOption = (id, option) => {\n    questions.map(c => {\n      if (c.num === id) {\n        c.active = option;\n      }\n    });\n    setQuestion(questions => [...questions]);\n    console.log(questions);\n  };\n\n  const postChoices = async () => {\n    setEndTime(Date.now());\n    const temp = {};\n\n    for (let i = 0; i < questions.length; i++) {\n      temp[questions[i].active] = temp[questions[i].active] ? temp[questions[i].active] + 1 : 1;\n    }\n\n    let entries = Object.entries(temp);\n    let minOptionCount = 11;\n    let maxOptionCount = -1;\n\n    for (let [index, [key, value]] of entries.entries()) {\n      if (value < minOptionCount) {\n        console.log(\"Going in min\", key, value);\n        minOptionCount = value;\n        setMinOption(minOption => [key, value]);\n      }\n\n      if (value > maxOptionCount) {\n        console.log(\"Going in max\", key, value);\n        maxOptionCount = value;\n        setMaxOption(maxOption => [key, value]);\n      }\n    }\n\n    console.log(\"Values\");\n    console.log(maxOption, minOption); // let lestFreqOptions = \"\";\n    // for (let [index, [key, value]] of entries.entries()) {\n    //   if (temp[key] === minOption) {\n    //     lestFreqOptions = lestFreqOptions.concat(value + \" \");\n    //   }\n    // }\n\n    setCount(temp);\n    setShow(true); // try {\n    //   await axios.post(\"http://localhost:5001/api/choices\", {\n    //     questions,\n    //   });\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  };\n\n  useEffect(() => {\n    setStartTime(Date.now());\n    selectRandomQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Thank you for taking the Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"m-2\",\n              xs: 12,\n              md: 8,\n              children: [\"Time taken: \", Math.floor((endTime - startTime) / 1000), \" sec\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"m-2\",\n              xs: 5,\n              md: 4,\n              children: [\"Most Chosen: \", maxOption[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"m-2\",\n              xs: 5,\n              md: 4,\n              children: [\"Least Chosen: \", minOption[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"m-2\",\n              xs: 5,\n              md: 4,\n              children: [\"Count: \", maxOption[1]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"m-2\",\n              xs: 5,\n              md: 4,\n              children: [\"Count: \", minOption[1]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(CSVLink, { ...csvReport,\n          children: \" Download your Responses \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), questions.map(q => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: q.num,\n        className: \"m-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [q.question, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: q.active === \"Strongly Disagree\" ? \"selected m-3\" : \"m-3\",\n            onClick: () => setOption(q.num, \"Strongly Disagree\"),\n            children: \"Strongly Disagree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => setOption(q.num, \"Disagree\"),\n            className: q.active === \"Disagree\" ? \"selected m-3\" : \"m-3\",\n            children: \"Disagree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: q.active === \"Slightly Disagree\" ? \"selected m-3\" : \"m-3\",\n            onClick: () => setOption(q.num, \"Slightly Disagree\"),\n            children: \"Slightly Disagree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: q.active === \"Neutral\" ? \"selected m-3\" : \"m-3\",\n            onClick: () => setOption(q.num, \"Neutral\"),\n            children: \"Neutral\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: q.active === \"Slightly Agree\" ? \"selected m-3\" : \"m-3\",\n            onClick: () => setOption(q.num, \"Slightly Agree\"),\n            children: \"Slightly Agree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: q.active === \"Agree\" ? \"selected m-3\" : \"m-3\",\n            onClick: () => setOption(q.num, \"Agree\"),\n            children: \"Agree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: q.active === \"Strongly Agree\" ? \"selected m-3\" : \"m-3\",\n            onClick: () => setOption(q.num, \"Strongly Agree\"),\n            children: \"Strongly Agree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"m-3\",\n      onClick: postChoices,\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2sNbAOf52z7FwMkM6fzAGQpRPdQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mushtaq/Desktop/projects/quiz/quiz-app/src/App.js"],"names":["logo","CSVLink","React","useEffect","useState","Row","Col","Card","Button","Container","Modal","axios","App","allQuestions","num","question","count","setCount","questions","setQuestion","show","setShow","startTime","setStartTime","endTime","setEndTime","minOption","setMinOption","maxOption","setMaxOption","headers","label","key","csvReport","filename","data","handleClose","selectRandomQuestions","shuffledQuestions","sort","Math","random","selected","slice","i","choice","setOption","id","option","map","c","active","console","log","postChoices","Date","now","temp","length","entries","Object","minOptionCount","maxOptionCount","index","value","floor","q"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { CSVLink } from \"react-csv\";\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card, Button, Container } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  let allQuestions = [\n    {\n      num: 1,\n      question: \"Caring for people who have suffered is an important virtue.\",\n    },\n    {\n      num: 2,\n      question:\n        \"I believe that compassion for those who are suffering is one of the most crucial virtues.\",\n    },\n    {\n      num: 3,\n      question: \"We should all care for people who are in emotional pain.\",\n    },\n    {\n      num: 4,\n      question:\n        \"I am empathetic toward those people who have suffered in their lives.\",\n    },\n    {\n      num: 5,\n      question:\n        \"Everyone should try to comfort people who are going through something hard.\",\n    },\n    {\n      num: 6,\n      question:\n        \"It pains me when I see someone ignoring the needs of another human being.\",\n    },\n    {\n      num: 7,\n      question:\n        \"The world would be a better place if everyone made the same amount of money.\",\n    },\n    {\n      num: 8,\n      question:\n        \"Our society would have fewer problems if people had the same income.\",\n    },\n    {\n      num: 9,\n      question:\n        \"I believe that everyone should be given the same quantity of resources in life.\",\n    },\n    {\n      num: 10,\n      question:\n        \"I believe it would be ideal if everyone in society wound up with roughly the same amount of money.\",\n    },\n    {\n      num: 11,\n      question:\n        \"When people work together toward a common goal, they should share the rewards equally, even if some worked harder on it.\",\n    },\n    {\n      num: 12,\n      question:\n        \"I get upset when some people have a lot more money than others in my country.\",\n    },\n    {\n      num: 13,\n      question:\n        \"I think people who are more hard-working should end up with more money.\",\n    },\n    {\n      num: 14,\n      question:\n        \"I think people should be rewarded in proportion to what they contribute.\",\n    },\n    {\n      num: 15,\n      question:\n        \"The effort a worker puts into a job ought to be reflected in the size of a raise they receive.\",\n    },\n    {\n      num: 16,\n      question: \"It makes me happy when people are recognized on their merits.\",\n    },\n    {\n      num: 17,\n      question:\n        \"In a fair society, those who work hard should live with higher standards of living.\",\n    },\n    {\n      num: 18,\n      question: \"I feel good when I see cheaters get caught and punished.\",\n    },\n    {\n      num: 19,\n      question:\n        \"I think children should be taught to be loyal to their country.\",\n    },\n    {\n      num: 20,\n      question: \"It upsets me when people have no loyalty to their country.\",\n    },\n    { num: 21, question: \"Everyone should love their own community.\" },\n    {\n      num: 22,\n      question: \"Everyone should defend their country, if called upon. \",\n    },\n    {\n      num: 23,\n      question:\n        \"Everyone should feel proud when a person in their community wins in an international competition.\",\n    },\n    {\n      num: 24,\n      question:\n        \"I believe the strength of a sports team comes from the loyalty of its members to each other.\",\n    },\n    {\n      num: 25,\n      question:\n        \"I think it is important for societies to cherish their traditional values.\",\n    },\n    {\n      num: 26,\n      question:\n        \"I feel that most traditions serve a valuable function in keeping society orderly\",\n    },\n    {\n      num: 27,\n      question: \"I think obedience to parents is an important virtue. \",\n    },\n    { num: 28, question: \"We all need to learn from our elders. \" },\n    {\n      num: 29,\n      question:\n        \"I believe that one of the most important values to teach children is to have respect for authority.\",\n    },\n    {\n      num: 30,\n      question: \"I think having a strong leader is good for society.\",\n    },\n    {\n      num: 31,\n      question:\n        \"I think the human body should be treated like a temple, housing something sacred within.\",\n    },\n    { num: 32, question: \"I believe chastity is an important virtue.\" },\n    {\n      num: 33,\n      question:\n        \"It upsets me when people use foul language like it is nothing.\",\n    },\n    {\n      num: 34,\n      question:\n        \"If I found out that an acquaintance had an unusual but harmless sexual fetish I would feel uneasy about them\",\n    },\n    {\n      num: 35,\n      question:\n        \"People should try to use natural medicines rather than chemically identical human-made ones.\",\n    },\n    {\n      num: 36,\n      question: \"I admire people who keep their virginity until marriage.\",\n    },\n  ];\n\n  const [count, setCount] = useState({});\n  const [questions, setQuestion] = useState([]);\n  const [show, setShow] = useState(false);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [minOption, setMinOption] = useState(\"\");\n  const [maxOption, setMaxOption] = useState(\"\");\n\n  const headers = [\n    { label: \"Question Number\", key: \"num\" },\n    { label: \"Question\", key: \"question\" },\n    { label: \"Active\", key: \"active\" },\n    { label: \"Choice\", key: \"choice\" },\n  ];\n\n  const csvReport = {\n    filename: \"Responses.csv\",\n    headers: headers,\n    data: questions,\n  };\n\n  const handleClose = () => setShow(false);\n\n  const selectRandomQuestions = () => {\n    const shuffledQuestions = allQuestions.sort(() => 0.5 - Math.random());\n\n    let selected = shuffledQuestions.slice(0, 10);\n    for (let i = 0; i < 10; i++) {\n      setQuestion((questions) => [\n        ...questions,\n        {\n          num: selected[i].num,\n          question: selected[i].question,\n          choice: \"None\",\n        },\n      ]);\n    }\n  };\n\n  const setOption = (id, option) => {\n    questions.map((c) => {\n      if (c.num === id) {\n        c.active = option;\n      }\n    });\n    setQuestion((questions) => [...questions]);\n\n    console.log(questions);\n  };\n  const postChoices = async () => {\n    setEndTime(Date.now());\n    const temp = {};\n    for (let i = 0; i < questions.length; i++) {\n      temp[questions[i].active] = temp[questions[i].active]\n        ? temp[questions[i].active] + 1\n        : 1;\n    }\n    let entries = Object.entries(temp);\n    let minOptionCount = 11;\n    let maxOptionCount = -1;\n\n    for (let [index, [key, value]] of entries.entries()) {\n      if (value < minOptionCount) {\n        console.log(\"Going in min\", key, value);\n        minOptionCount = value;\n        setMinOption((minOption) => [key, value]);\n      }\n\n      if (value > maxOptionCount) {\n        console.log(\"Going in max\", key, value);\n        maxOptionCount = value;\n        setMaxOption((maxOption) => [key, value]);\n      }\n    }\n\n    console.log(\"Values\");\n    console.log(maxOption, minOption);\n\n    // let lestFreqOptions = \"\";\n    // for (let [index, [key, value]] of entries.entries()) {\n    //   if (temp[key] === minOption) {\n    //     lestFreqOptions = lestFreqOptions.concat(value + \" \");\n    //   }\n    // }\n\n    setCount(temp);\n    setShow(true);\n\n    // try {\n    //   await axios.post(\"http://localhost:5001/api/choices\", {\n    //     questions,\n    //   });\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  };\n  useEffect(() => {\n    setStartTime(Date.now());\n    selectRandomQuestions();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Thank you for taking the Quiz</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <Col className=\"m-2\" xs={12} md={8}>\n                Time taken: {Math.floor((endTime - startTime) / 1000)} sec{\" \"}\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"m-2\" xs={5} md={4}>\n                Most Chosen: {maxOption[0]}\n              </Col>\n              <Col className=\"m-2\" xs={5} md={4}>\n                Least Chosen: {minOption[0]}\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"m-2\" xs={5} md={4}>\n                Count: {maxOption[1]}\n              </Col>\n              <Col className=\"m-2\" xs={5} md={4}>\n                Count: {minOption[1]}\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <CSVLink {...csvReport}> Download your Responses </CSVLink>\n\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {questions.map((q) => {\n        return (\n          <Card id={q.num} className=\"m-4\">\n            <Card.Header>{q.question} </Card.Header>\n            <Card.Body>\n              <Button\n                variant=\"primary\"\n                className={\n                  q.active === \"Strongly Disagree\" ? \"selected m-3\" : \"m-3\"\n                }\n                onClick={() => setOption(q.num, \"Strongly Disagree\")}\n              >\n                Strongly Disagree\n              </Button>\n              <Button\n                variant=\"primary\"\n                onClick={() => setOption(q.num, \"Disagree\")}\n                className={q.active === \"Disagree\" ? \"selected m-3\" : \"m-3\"}\n              >\n                Disagree\n              </Button>\n              <Button\n                variant=\"primary\"\n                className={\n                  q.active === \"Slightly Disagree\" ? \"selected m-3\" : \"m-3\"\n                }\n                onClick={() => setOption(q.num, \"Slightly Disagree\")}\n              >\n                Slightly Disagree\n              </Button>\n              <Button\n                variant=\"primary\"\n                className={q.active === \"Neutral\" ? \"selected m-3\" : \"m-3\"}\n                onClick={() => setOption(q.num, \"Neutral\")}\n              >\n                Neutral\n              </Button>\n              <Button\n                variant=\"primary\"\n                className={\n                  q.active === \"Slightly Agree\" ? \"selected m-3\" : \"m-3\"\n                }\n                onClick={() => setOption(q.num, \"Slightly Agree\")}\n              >\n                Slightly Agree\n              </Button>\n              <Button\n                variant=\"primary\"\n                className={q.active === \"Agree\" ? \"selected m-3\" : \"m-3\"}\n                onClick={() => setOption(q.num, \"Agree\")}\n              >\n                Agree\n              </Button>\n              <Button\n                variant=\"primary\"\n                className={\n                  q.active === \"Strongly Agree\" ? \"selected m-3\" : \"m-3\"\n                }\n                onClick={() => setOption(q.num, \"Strongly Agree\")}\n              >\n                Strongly Agree\n              </Button>\n            </Card.Body>\n          </Card>\n        );\n      })}\n      <Button variant=\"primary\" className=\"m-3\" onClick={postChoices}>\n        Finish\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}